{
    "name": "GGP007_valorizzazione_di_contact_point",
    "displayName": "Valorizzazione di Contact Point",
    "description": "I riferimenti di contatto del Data Product, specificati nel Data Product Descriptor al momento della registrazione di una nuova versione di un Data Product, devono essere valorizzati e devono essere almeno due: un riferimento di contatto per l'owner del Data Product, che abbia: nome, che deve essere lo stesso dichiarato in owner.name; descrizione, che deve essere valorizzata, non deve essere vuota e deve essere lunga almeno quindici caratteri (esclusi gli spazi); canale, che deve essere valorizzato come 'mail'; indirizzo, che deve essere lo stesso dichiarato in owner.id. Un riferimento di contatto come referente tecnico, che abbia: nome, che deve essere valorizzato, non deve essere vuoto e deve essere lungo almeno cinque caratteri (esclusi gli spazi); descrizione, che deve essere valorizzata, non deve essere vuota e deve essere lunga almeno quindici caratteri (esclusi gli spazi); canale, che deve essere valorizzato come 'mail'; indirizzo, deve essere espresso nel seguente formato: <nome>@eni.com.",
    "blockingFlag": "true",
    "rawContent": "package GGP007_valorizzazione_di_contact_point\n\ndefault allow := false\n\nallow { some i \n\n some j\n\n \n\ninput.afterState.dataProductVersion.info.contactPoints[i].name == input.afterState.dataProductVersion.info.owner.name\n\n count(trim(input.afterState.dataProductVersion.info.contactPoints[i].description, \" \")) >= 30\n\ninput.afterState.dataProductVersion.info.contactPoints[i].channel == \"mail\"\n\n input.afterState.dataProductVersion.info.contactPoints[i].address == input.afterState.dataProductVersion.info.owner.id\n\ncount(trim(input.afterState.dataProductVersion.info.contactPoints[j].name, \" \")) >= 5\n\n count(trim(input.afterState.dataProductVersion.info.contactPoints[j].description, \" \")) >= 30\n\ninput.afterState.dataProductVersion.info.contactPoints[j].channel == \"mail\"\n\n regex.match(\"^[a-zA-Z]+\\\\.[a-zA-Z]+@eni\\\\.com$\", input.afterState.dataProductVersion.info.contactPoints[j].address) \n\n i!= j}",
    "evaluationEvents": [
    {
      "event": "DATA_PRODUCT_VERSION_CREATION"
    }
  ],
    "filteringExpression": "true",
    "suite": "data_product_general_discoverability_metadata",
    "policyEngine":{
        "id": 1,
        "name": "opa_policy_engine"
    }
}