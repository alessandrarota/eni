version: '3.8'

services:
  platform-local-metastore:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: platform-local-metastore
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SA_PASSWORD}
    ports:
      - "${SQLSERVER_PORT}:${SQLSERVER_PORT}"
    volumes:
      - sql-data:/var/opt/mssql
    

  sql-init:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      - platform-local-metastore
    volumes:
      - ./platform-local-metastore:/platform-local-metastore
    entrypoint: >
      /bin/bash -c "
      sleep 15 &&
      until /opt/mssql-tools/bin/sqlcmd -S platform-local-metastore -U sa -P ${SA_PASSWORD} -Q 'SELECT 1'; do
        echo 'Waiting for SQL Server to be ready...'
        sleep 5
      done &&
      /opt/mssql-tools/bin/sqlcmd -S platform-local-metastore -U sa -P ${SA_PASSWORD} -i /platform-local-metastore/init.sql"
    

  platform-custom-receiver:
    build:
      context: ./platform-custom-receiver
    container_name: platform-custom-receiver
    environment:
      - DB_URL=${DB_URL}
    ports:
      - "${CUSTOM_RECEIVER_PORT}:${CUSTOM_RECEIVER_PORT}"
    depends_on:
      - platform-local-metastore
      - sql-init
    entrypoint: >
      /bin/bash -c "
      sleep 15 &&
      until nc -zv platform-local-metastore 1433; do
        echo 'Waiting for SQL Server to be ready...'
        sleep 5
      done &&
      java -jar /app/platform-custom-receiver.jar"
    

  platform-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: platform-collector
    command: ["--config=/etc/platform-collector/config.yaml"]
    volumes:
      - ./platform-collector/config.yaml:/etc/platform-collector/config.yaml
    ports:
      - "${OTEL_GRPC_PORT}:${OTEL_GRPC_PORT}"
      - "${OTEL_HTTP_PORT}:${OTEL_HTTP_PORT}"
    depends_on:
      - platform-custom-receiver
      - platform-local-metastore
      - sql-init

  cdp-quality-sidecar:
    build:
      context: ./cdp-quality-sidecar
    container_name: cdp-quality-sidecar
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_ENDPOINT}
      - OTEL_METRIC_EXPORT_INTERVAL=10000
      - OTEL_SERVICE_NAME=consuntiviDiProduzione-quality_sidecar
    depends_on:
      - platform-collector


  # forwarder:
  #   build:
  #     context: ./forwarder
  #   environment:
  #     - ENV=testing
  #   ports:
  #     - "5000:5000"
  #   depends_on:
  #     - sqlserver
  #     - sql-init
  #   entrypoint: >
  #     /bin/bash -c "sleep 10 && 
  #     until nc -zv sqlserver 1433; do 
  #       echo 'Waiting for SQL Server to be ready...' && 
  #       sleep 5; 
  #     done && 
  #     echo 'SQL Server is ready, starting the service...' && 
  #     python3 /app/build/app.py"

volumes:
  sql-data:
    driver: local

