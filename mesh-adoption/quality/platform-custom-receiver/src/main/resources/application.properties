spring.application.name=OTELCustomCollector

spring.datasource.url=${DB_URL:jdbc:sqlserver://localhost:1433;databaseName=quality;encrypt=false;}
spring.datasource.username=sa
spring.datasource.password=yourStrongPassword123
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
hibernate.hbm2ddl.auto=validate


grpc.server.port=8080

otlp.signalType = DATA_QUALITY

otlp.metric.appName.key=service.name
otlp.metric.appName.placeholder=N/A

otlp.metric.dataProductName.key=data_product_name
otlp.metric.dataProductName.placeholder=N/A
otlp.metric.expectationName.key=expectation_name
otlp.metric.expectationName.placeholder=NULL
otlp.metric.elementCount.key=element_count
otlp.metric.elementCount.placeholder=0
otlp.metric.unexpectedCount.key=unexpected_count
otlp.metric.unexpectedCount.placeholder=0

oltp.log.sourceFile.key=code.filepath
oltp.log.sourceFile.placeholder=N/A
oltp.log.sourceFunction.key=code.function
oltp.log.sourceFunction.placeholder=N/A
oltp.log.lineNumber.key=code.lineno
oltp.log.lineNumber.placeholder=-1